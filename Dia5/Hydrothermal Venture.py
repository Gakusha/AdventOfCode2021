    
listaI=[[565, 190], [402, 695], [271, 844], [276, 41], [12, 93], [322, 257], [485, 728], [216, 137], [96, 897], [822, 842], [972, 794], [337, 859], [652, 559], [487, 408], [621, 186], [401, 320], [97, 604], [561, 737], [490, 553], [257, 223], [246, 642], [142, 746], [693, 274], [525, 836], [44, 72], [744, 44], [401, 802], [923, 567], [938, 276], [803, 41], [52, 156], [167, 856], [88, 341], [499, 560], [350, 365], [48, 128], [286, 685], [562, 239], [314, 49], [97, 912], [585, 607], [951, 895], [959, 734], [338, 242], [802, 286], [943, 21], [88, 807], [790, 546], [676, 482], [605, 927], [792, 554], [868, 33], [648, 242], [488, 535], [43, 687], [25, 894], [967, 839], [358, 122], [916, 474], [31, 168], [550, 662], [558, 802], [339, 105], [519, 872], [895, 194], [98, 952], [676, 53], [820, 238], [983, 686], [715, 895], [663, 820], [788, 863], [688, 900], [438, 77], [400, 209], [610, 883], [937, 61], [456, 79], [612, 344], [702, 926], [324, 415], [256, 668], [391, 824], [691, 570], [468, 470], [142, 937], [872, 232], [984, 229], [988, 15], [463, 744], [26, 21], [299, 936], [394, 402], [284, 123], [902, 896], [328, 329], [950, 28], [214, 677], [271, 897], [406, 179], [739, 63], [497, 592], [396, 118], [773, 922], [104, 13], [855, 717], [17, 464], [755, 766], [806, 236], [483, 322], [608, 428], [415, 730], [832, 417], [765, 408], [377, 695], [839, 506], [219, 383], [397, 398], [985, 26], [548, 956], [439, 25], [360, 679], [538, 446], [59, 742], [899, 591], [331, 391], [726, 747], [842, 624], [450, 746], [662, 401], [340, 193], [35, 963], [892, 489], [948, 84], [97, 301], [732, 93], [186, 879], [328, 964], [967, 903], [220, 438], [246, 586], [675, 787], [976, 855], [255, 867], [806, 684], [237, 213], [921, 696], [66, 957], [139, 300], [460, 535], [235, 981], [962, 921], [396, 62], [286, 606], [827, 124], [286, 911], [311, 631], [787, 605], [845, 620], [777, 334], [901, 398], [538, 917], [703, 831], [808, 413], [928, 904], [10, 14], [310, 89], [989, 980], [621, 674], [233, 944], [964, 12], [843, 727], [39, 248], [284, 402], [198, 961], [375, 692], [450, 625], [115, 953], [680, 673], [717, 543], [337, 561], [811, 430], [925, 549], [271, 880], [392, 365], [244, 681], [731, 896], [214, 849], [444, 829], [278, 324], [98, 174], [112, 730], [640, 657], [654, 208], [590, 804], [426, 306], [281, 290], [197, 979], [535, 590], [388, 27], [865, 847], [243, 109], [907, 29], [528, 984], [94, 924], [753, 22], [517, 852], [583, 209], [152, 886], [184, 655], [11, 248], [268, 249], [284, 264], [191, 827], [625, 309], [343, 572], [697, 418], [945, 204], [163, 461], [462, 131], [588, 514], [378, 148], [522, 910], [56, 16], [23, 262], [710, 158], [177, 201], [619, 612], [213, 594], [826, 436], [499, 444], [587, 917], [296, 504], [505, 514], [304, 496], [723, 420], [808, 896], [727, 940], [936, 279], [960, 547], [134, 870], [11, 988], [951, 946], [854, 949], [623, 733], [710, 496], [587, 957], [25, 989], [188, 649], [575, 376], [130, 988], [308, 904], [40, 743], [216, 443], [484, 642], [76, 900], [657, 780], [850, 12], [468, 532], [689, 80], [951, 504], [19, 746], [628, 758], [460, 964], [964, 21], [274, 346], [441, 940], [743, 642], [825, 628], [935, 301], [35, 294], [80, 179], [251, 389], [666, 366], [281, 24], [902, 249], [737, 936], [973, 247], [187, 520], [13, 165], [293, 390], [607, 317], [114, 900], [104, 912], [756, 196], [466, 191], [98, 673], [418, 597], [11, 987], [455, 559], [796, 177], [423, 74], [983, 211], [415, 613], [284, 304], [733, 409], [49, 974], [573, 617], [899, 875], [509, 401], [457, 122], [807, 50], [707, 557], [320, 432], [275, 765], [851, 345], [75, 764], [218, 786], [635, 26], [405, 451], [256, 619], [979, 10], [726, 68], [543, 775], [404, 275], [883, 152], [717, 885], [689, 112], [556, 241], [866, 120], [864, 574], [952, 946], [383, 624], [785, 901], [705, 494], [115, 599], [355, 406], [239, 678], [940, 477], [823, 714], [884, 182], [344, 844], [196, 919], [140, 262], [965, 331], [207, 771], [960, 646], [386, 884], [749, 684], [451, 256], [500, 324], [391, 435], [488, 741], [922, 898], [527, 351], [51, 809], [659, 148], [948, 839], [677, 491], [703, 40], [324, 95], [104, 588], [282, 252], [709, 270], [813, 820], [73, 432], [981, 778], [874, 439], [227, 471], [833, 597], [628, 886], [354, 603], [335, 135], [844, 830], [65, 725], [978, 103], [757, 261], [974, 184], [555, 214], [414, 426], [685, 542], [522, 624], [715, 71], [622, 747], [934, 265], [423, 511], [887, 502], [871, 719], [941, 929], [459, 176], [69, 80], [268, 186], [664, 123], [791, 313], [794, 363], [522, 553], [139, 311], [135, 942], [311, 746], [800, 498], [83, 59], [182, 752], [756, 145], [761, 767], [592, 167], [880, 772], [948, 979], [125, 696], [671, 494], [613, 835], [365, 206], [974, 835], [478, 175], [195, 807], [558, 724], [463, 852], [63, 256], [110, 652], [705, 488], [829, 822], [906, 307], [987, 874], [505, 454], [499, 738], [598, 928], [862, 564], [351, 438], [631, 612], [533, 124], [275, 877], [63, 677], [466, 258], [294, 79], [772, 463], [837, 496], [662, 982], [512, 982], [585, 395], [214, 292], [732, 457], [852, 885], [819, 38], [304, 555], [80, 803], [867, 32], [47, 767], [329, 506], [10, 270], [724, 478], [766, 781], [896, 860], [559, 676], [680, 386], [469, 692], [970, 366], [404, 573], [958, 402], [480, 920], [229, 104], [100, 498], [525, 150], [56, 777], [188, 762], [948, 123], [492, 814], [329, 373], [461, 233], [395, 787], [236, 185], [91, 961], [201, 340], [661, 442], [360, 606], [125, 464], [915, 166], [615, 313], [694, 128], [556, 933], [274, 136], [775, 616], [804, 540], [617, 576], [648, 211], [198, 293], [252, 822], [658, 917], [161, 325], [217, 460], [652, 910], [325, 233], [213, 252], [673, 252], [264, 870], [67, 763], [206, 469], [234, 455], [808, 484], [577, 578], [591, 721], [759, 493], [703, 334], [751, 702], [115, 141], [708, 949], [482, 456], [848, 164], [765, 219], [148, 890], [973, 82], [149, 622]]

listaF=[[756, 381], [402, 138], [98, 844], [276, 282], [512, 593], [157, 422], [685, 528], [593, 514], [984, 897], [70, 842], [972, 43], [562, 859], [652, 245], [952, 408], [621, 592], [981, 320], [97, 892], [561, 142], [48, 553], [694, 660], [877, 11], [656, 746], [272, 695], [525, 74], [861, 889], [117, 671], [350, 802], [705, 567], [938, 297], [435, 41], [836, 940], [906, 117], [130, 341], [499, 593], [350, 739], [989, 128], [886, 685], [562, 229], [314, 125], [985, 24], [585, 572], [234, 178], [11, 734], [796, 242], [426, 286], [56, 908], [821, 74], [790, 270], [676, 740], [178, 927], [403, 943], [868, 835], [648, 704], [836, 883], [43, 286], [277, 894], [494, 366], [305, 122], [175, 474], [31, 44], [527, 662], [669, 691], [339, 108], [25, 378], [752, 337], [205, 952], [676, 728], [815, 238], [934, 735], [715, 234], [201, 820], [57, 132], [688, 160], [360, 77], [152, 457], [610, 97], [150, 848], [456, 825], [58, 344], [43, 267], [145, 415], [256, 116], [108, 824], [464, 797], [468, 773], [99, 937], [393, 711], [273, 940], [425, 578], [463, 904], [26, 947], [911, 324], [821, 402], [628, 467], [212, 206], [436, 329], [59, 919], [214, 952], [856, 897], [406, 242], [962, 286], [817, 912], [865, 587], [29, 178], [694, 603], [631, 493], [946, 464], [755, 379], [14, 236], [948, 322], [716, 428], [685, 730], [569, 680], [765, 784], [612, 460], [839, 242], [219, 27], [397, 633], [32, 979], [404, 812], [186, 25], [360, 455], [162, 822], [535, 742], [902, 591], [331, 513], [454, 747], [648, 624], [982, 746], [662, 663], [206, 193], [318, 963], [88, 489], [417, 84], [97, 95], [887, 248], [976, 89], [157, 964], [903, 903], [134, 438], [822, 586], [675, 735], [113, 855], [607, 515], [509, 684], [237, 859], [893, 696], [66, 559], [267, 300], [460, 829], [394, 981], [240, 199], [47, 62], [594, 914], [827, 188], [487, 911], [311, 271], [787, 965], [922, 697], [237, 874], [881, 378], [568, 917], [257, 831], [808, 967], [239, 215], [984, 988], [310, 100], [23, 14], [621, 45], [458, 719], [99, 12], [241, 125], [39, 447], [284, 571], [198, 127], [666, 401], [435, 610], [115, 339], [614, 673], [444, 816], [76, 561], [643, 598], [720, 549], [941, 210], [622, 365], [285, 681], [711, 876], [214, 924], [799, 829], [117, 163], [98, 644], [626, 730], [640, 710], [689, 173], [26, 240], [783, 663], [767, 290], [36, 979], [844, 281], [15, 400], [332, 847], [243, 731], [752, 29], [764, 984], [886, 132], [50, 725], [517, 293], [583, 34], [808, 230], [298, 655], [11, 470], [898, 249], [284, 827], [286, 827], [550, 309], [815, 572], [606, 509], [945, 660], [203, 421], [565, 28], [151, 77], [631, 401], [522, 68], [973, 933], [422, 661], [641, 158], [177, 892], [414, 407], [213, 614], [815, 436], [499, 487], [571, 933], [296, 808], [601, 514], [304, 581], [723, 63], [55, 143], [558, 771], [545, 279], [606, 547], [504, 500], [989, 10], [25, 20], [217, 312], [623, 813], [446, 496], [907, 957], [970, 44], [773, 64], [951, 376], [680, 438], [104, 700], [40, 171], [216, 825], [875, 251], [402, 900], [704, 827], [33, 829], [942, 532], [687, 80], [951, 614], [19, 320], [628, 113], [498, 964], [42, 943], [274, 440], [441, 463], [304, 203], [423, 628], [935, 859], [353, 294], [879, 978], [251, 854], [126, 366], [281, 465], [902, 561], [737, 153], [973, 964], [44, 377], [13, 757], [493, 190], [607, 102], [103, 900], [851, 165], [756, 273], [837, 562], [98, 231], [966, 597], [988, 10], [693, 321], [175, 798], [423, 984], [211, 211], [415, 537], [284, 835], [733, 659], [718, 305], [856, 900], [191, 167], [738, 172], [457, 951], [18, 839], [707, 985], [366, 478], [850, 190], [556, 640], [409, 764], [218, 732], [388, 26], [763, 809], [378, 741], [22, 967], [322, 68], [543, 147], [404, 331], [289, 746], [717, 497], [25, 776], [556, 826], [708, 278], [864, 230], [179, 946], [450, 557], [785, 985], [621, 494], [115, 948], [164, 406], [444, 678], [714, 477], [175, 66], [86, 980], [852, 336], [76, 919], [140, 884], [965, 363], [207, 696], [387, 73], [653, 884], [786, 721], [633, 256], [966, 790], [391, 843], [630, 883], [117, 93], [630, 351], [51, 681], [713, 148], [948, 843], [304, 491], [703, 915], [324, 144], [104, 91], [282, 262], [72, 907], [142, 149], [846, 432], [981, 209], [502, 439], [227, 558], [833, 34], [628, 549], [354, 153], [875, 675], [844, 182], [65, 484], [152, 929], [157, 861], [974, 931], [555, 69], [468, 426], [685, 105], [298, 624], [715, 810], [622, 474], [934, 343], [423, 77], [887, 515], [835, 719], [692, 680], [219, 176], [942, 953], [268, 243], [974, 123], [920, 313], [333, 824], [522, 117], [345, 311], [486, 942], [311, 843], [800, 418], [640, 616], [182, 748], [347, 145], [617, 767], [379, 380], [104, 772], [845, 979], [634, 696], [671, 550], [613, 869], [97, 206], [181, 42], [478, 297], [844, 807], [886, 724], [463, 467], [123, 316], [429, 652], [652, 488], [158, 151], [906, 668], [274, 874], [505, 484], [499, 102], [293, 928], [558, 564], [351, 854], [148, 129], [945, 124], [410, 877], [286, 454], [466, 851], [715, 500], [680, 463], [837, 336], [330, 650], [536, 982], [640, 395], [485, 563], [976, 457], [852, 582], [138, 719], [304, 569], [481, 803], [535, 32], [785, 29], [329, 930], [598, 270], [270, 932], [766, 671], [134, 98], [632, 676], [892, 174], [504, 692], [970, 390], [663, 314], [618, 402], [480, 964], [229, 582], [100, 532], [522, 150], [426, 777], [599, 762], [872, 123], [812, 814], [253, 373], [742, 514], [946, 236], [576, 185], [911, 141], [769, 908], [661, 592], [360, 984], [825, 464], [793, 44], [132, 796], [817, 128], [556, 801], [116, 136], [282, 123], [546, 798], [374, 576], [200, 659], [395, 293], [304, 822], [658, 239], [185, 325], [217, 736], [15, 273], [627, 233], [879, 252], [607, 186], [946, 188], [67, 829], [762, 469], [604, 85], [808, 708], [809, 578], [591, 558], [564, 298], [571, 334], [128, 79], [882, 908], [334, 949], [482, 382], [44, 968], [935, 219], [508, 890], [308, 747], [893, 622]]

matriz=[([0]*1000) for i in range(1000)]

def parte1():
    for i in range(500):
        if listaI[i][0]==listaF[i][0]:
            #horizontal
            if listaI[i][1]<listaF[i][1]:
                for x in range(listaI[i][1],(listaF[i][1])+1):
                    if (matriz[listaI[i][0]][x]!=2):
                        matriz[listaI[i][0]][x]+=1
            else:
                for x in range(listaF[i][1],listaI[i][1]+1):
                    if (matriz[listaI[i][0]][x]!=2):
                        matriz[listaI[i][0]][x]+=1
                    
        elif listaI[i][1]==listaF[i][1]:
            #vertical
            if listaI[i][0]<listaF[i][0]:
                for x in range(listaI[i][0],listaF[i][0]+1):
                    if (matriz[x][listaI[i][1]]!=2):
                        matriz[x][listaI[i][1]]+=1
            else:
                for x in range(listaF[i][0],listaI[i][0]+1):
                    if (matriz[x][listaI[i][1]]!=2):
                        matriz[x][listaI[i][1]]+=1
        
    
    
    total=0
    for x in range(1000):
        total+=matriz[x].count(2)
    
    print (total)

def parte2():
    for i in range(500):
        if listaI[i][0]==listaF[i][0]:
            #horizontal
            if listaI[i][1]<listaF[i][1]:
                for x in range(listaI[i][1],(listaF[i][1])+1):
                    if (matriz[listaI[i][0]][x]!=2):
                        matriz[listaI[i][0]][x]+=1
            else:
                for x in range(listaF[i][1],listaI[i][1]+1):
                    if (matriz[listaI[i][0]][x]!=2):
                        matriz[listaI[i][0]][x]+=1
                    
        elif listaI[i][1]==listaF[i][1]:
            #vertical
            if listaI[i][0]<listaF[i][0]:
                for x in range(listaI[i][0],listaF[i][0]+1):
                    if (matriz[x][listaI[i][1]]!=2):
                        matriz[x][listaI[i][1]]+=1
            else:
                for x in range(listaF[i][0],listaI[i][0]+1):
                    if (matriz[x][listaI[i][1]]!=2):
                        matriz[x][listaI[i][1]]+=1
                        
                        
        elif abs(listaI[i][1]-listaF[i][1])==abs(listaI[i][0]-listaF[i][0]):
            
            #diagonal
            
            for x in range(abs(listaI[i][1]-listaF[i][1])+1):
                
                if listaI[i][0]-listaF[i][0] < 0 and listaI[i][1]-listaF[i][1] < 0:
                    
                    if(matriz[listaI[i][0]+x][listaI[i][1]+x]!=2):
                        matriz[listaI[i][0]+x][listaI[i][1]+x]+=1
                        
                if listaI[i][0]-listaF[i][0] > 0 and listaI[i][1]-listaF[i][1] > 0:
                    
                    if(matriz[listaI[i][0]-x][listaI[i][1]-x]!=2):
                        matriz[listaI[i][0]-x][listaI[i][1]-x]+=1
                    
                if listaI[i][0]-listaF[i][0] < 0 and listaI[i][1]-listaF[i][1] > 0:
                    
                    if(matriz[listaI[i][0]+x][listaI[i][1]-x]!=2):
                        matriz[listaI[i][0]+x][listaI[i][1]-x]+=1
                        
                if listaI[i][0]-listaF[i][0] > 0 and listaI[i][1]-listaF[i][1] < 0:
                    
                    if(matriz[listaI[i][0]-x][listaI[i][1]+x]!=2):
                        matriz[listaI[i][0]-x][listaI[i][1]+x]+=1
                
                
                           
            
                        
    total=0
    for x in range(1000):
        total+=matriz[x].count(2)
    
    print (total) 
    
parte2()